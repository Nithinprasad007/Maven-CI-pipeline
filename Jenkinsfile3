  pipeline{
   agent any

   tools {
     maven 'mvn'
   }
   stages {
       
       stage("git pull"){
           steps{
               git branch: 'master', credentialsId: 'np', url: 'https://github.com/thevictorgreen/JavaJenkinsMavenSonarqubeExample.git'
           }
       }

     stage ("build") {
        steps {
           sh 'mvn clean install'
        }
     }

        stage ("sonar"){
            steps{
                script{
                withSonarQubeEnv('sonarQube') {
            sh 'mvn clean verify sonar:sonar -Dsonar.projectName=sonarIntegratedjfrog-nexusProject -Dsonar.projectKey=sonarIntegratedjfrog-nexusProject'
                }
        }
            }
            
        }
     stage ("Archive the Artifact"){
            steps{
                archiveArtifacts artifacts: '**/*.jar', followSymlinks: false
            }
        }
     stage('jfrog'){
            steps{
                rtUpload (
    serverId: 'jfrog',
    spec: '''{
          "files": [
            {
               "pattern": "*.jar",
              "target": "example-repo-local"
            }
         ]
    }''',
        )}
        
     }
     stage('JaCoCo') {
            steps {
                echo 'Code Coverage'
                jacoco()
            }
        }
   stage('Static Analysis') {
            steps {
               sh 'mvn checkstyle:checkstyle'
                recordIssues enabledForFailure: true, tools: [checkStyle(pattern: 'target/checkstyle-result.xml')]
                sh 'mvn pmd:check'    
                recordIssues enabledForFailure: true, tools: [pmdParser(pattern: 'target/pmd.xml')]
            }
        }
    }
  }
